{"version":3,"sources":["hoc/AuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogName/DialogName.module.css","components/Dialogs/DialogMessage/DialogMessage.module.css","components/Dialogs/DialogName/DialogName.jsx","components/Dialogs/DialogMessage/DialogMessage.jsx","components/Dialogs/Forms/MessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/Dialogs_Container.jsx"],"names":["AuthRedirect","Component","RedirectComponent","this","props","isAuth","to","React","connect","state","auth","messagesArray11","dialogsPage","messagesArray","module","exports","DialogName","className","style_dialogName","name","id","DialogMessage","style_dialogMessage","message","maxLength10","maxLengthThunkCreator","Textarea","elementFormHOC","ReduxMessageFormcontainer","reduxForm","form","onSubmit","handleSubmit","style_dialogs","addMessage","createField","required","Dialogs","dialogElements","dialogsArray","map","el","messageElements","content","column_names","section","column_messages","formData","addMessageState","newMessage","obj_ActionCreator_ToDispatch","addMessageStateActionCreator","DialogsContainer","compose"],"mappings":"8NAIaA,EAAe,SAACC,GAAe,IAElCC,EAFiC,uKAK/B,OAAKC,KAAKC,MAAMC,OAET,cAACJ,EAAD,eAAeE,KAAKC,QAFI,cAAC,IAAD,CAAUE,GAAI,gBALd,GAEPC,IAAMN,WAmBtC,OAFuCO,aAPN,SAACC,GAC9B,MAAO,CACHJ,OAAQI,EAAMC,KAAKL,OACnBM,gBAAiBF,EAAMG,YAAYC,iBAIJL,CAAoCN,K,oBCtB/EY,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,QAAU,yBAAyB,gBAAkB,iCAAiC,QAAU,yBAAyB,WAAa,8B,oBCAxOD,EAAOC,QAAU,CAAC,KAAO,2B,oBCAzBD,EAAOC,QAAU,CAAC,QAAU,iC,6GCgBbC,EAZI,SAACZ,GAKhB,OACI,qBAAKa,UAAWC,IAAiBC,KAAjC,SACI,cAAC,IAAD,CAASb,GAAI,YAAcF,EAAMgB,GAAjC,SAAsChB,EAAMe,U,kBCAzCE,EATO,SAACjB,GAEnB,OACI,qBAAKa,UAAWK,IAAoBC,QAApC,SACKnB,EAAMmB,W,yBCDbC,EAAcC,YAAsB,IAEpCC,EAAWC,YAAe,YAqBnBC,EAA4BC,YAAU,CAACC,KAAM,kBAAjBD,EAnBrB,SAACzB,GACjB,OACI,sBAAM2B,SAAU3B,EAAM4B,aAAtB,SACI,sBAAKf,UAAWgB,IAAcC,WAA9B,UACKC,YAAY,UAAW,aAAcT,EAAU,CAACU,IAAUZ,GAAc,KAAM,MAO/E,8BACI,4DCWLa,EA3BC,SAACjC,GAEb,IAAIkC,EAAiBlC,EAAMQ,YAAY2B,aAAaC,KAAI,SAACC,GAAD,OACpD,cAAC,EAAD,CAAwBtB,KAAMsB,EAAGtB,KAAMC,GAAIqB,EAAGrB,IAA7BqB,EAAGrB,OAEpBsB,EAAkBtC,EAAMQ,YAAYC,cAAc2B,KAAI,SAACC,GAAD,OACtD,cAAC,EAAD,CAAgClB,QAASkB,EAAGlB,SAAxBkB,EAAGlB,YAM3B,OACI,sBAAKN,UAAWgB,IAAcU,QAA9B,UACI,sBAAK1B,UAAWgB,IAAcW,aAA9B,UACI,qBAAK3B,UAAWgB,IAAcY,QAA9B,qBACCP,KAEL,sBAAKrB,UAAWgB,IAAca,gBAA9B,UACI,qBAAK7B,UAAWgB,IAAcY,QAA9B,sBACCH,EACD,cAACd,EAAD,CAA2BG,SAbf,SAACgB,GACrB3C,EAAM4C,gBAAgBD,EAASE,sB,wBCFnCC,EAA+B,CAC/BF,gBAAiBG,KAGfC,EAAmBC,YAAQ7C,aAVX,SAACC,GACnB,MAAO,CACHG,YAAaH,EAAMG,eAQ+BsC,GAA+BlD,IAAhEqD,CAA8EhB,GAExFe","file":"static/js/4.b5ea2a35.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const AuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login/'}/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n\r\n    }\r\n\r\n    let mapStateToPropsForRedirect = (state) => {\r\n        return {\r\n            isAuth: state.auth.isAuth,\r\n            messagesArray11: state.dialogsPage.messagesArray\r\n        }\r\n    };\r\n\r\n    const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__zGJWo\",\"column_names\":\"Dialogs_column_names__3DVZ_\",\"section\":\"Dialogs_section__TmN5W\",\"column_messages\":\"Dialogs_column_messages__1sLKH\",\"message\":\"Dialogs_message__3dKt3\",\"addMessage\":\"Dialogs_addMessage__1l0LD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"DialogName_name__5hGrJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"DialogMessage_message__28nC3\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style_dialogName from './DialogName.module.css';\r\n\r\n\r\nconst DialogName = (props) => {\r\n\r\n    // let path = '/dialogs/' + props.id;\r\n    // let name = props.name;\r\n\r\n    return (\r\n        <div className={style_dialogName.name}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogName;","import React from 'react';\r\nimport style_dialogMessage from './DialogMessage.module.css';\r\n\r\nconst DialogMessage = (props) => {\r\n\r\n    return (\r\n        <div className={style_dialogMessage.message}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogMessage;","import style_dialogs from \"../Dialogs.module.css\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {maxLengthThunkCreator, required} from \"../../Second_files/Validators/validators\";\r\nimport React from \"react\";\r\nimport {createField, elementFormHOC} from \"../../Second_files/Forms_control/formsControl\";\r\n\r\nconst maxLength10 = maxLengthThunkCreator(10);\r\n\r\nconst Textarea = elementFormHOC('textarea');\r\n\r\nconst MessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={style_dialogs.addMessage}>\r\n                {createField('message', 'newMessage', Textarea, [required, maxLength10], null, null)}\r\n\r\n                {/*<div>*/}\r\n                {/*    <Field name={'newMessag'} placeholder={'message'} component={Textarea}*/}\r\n                {/*           validate={[required, maxLength10]}/>*/}\r\n                {/*</div>*/}\r\n\r\n                <div>\r\n                    <button>Send message</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const ReduxMessageFormcontainer = reduxForm({form: 'newMessageText'})(MessageForm);","import React from 'react';\r\nimport style_dialogs from './Dialogs.module.css';\r\nimport DialogName from './DialogName/DialogName';\r\nimport DialogMessage from './DialogMessage/DialogMessage';\r\nimport {ReduxMessageFormcontainer} from \"./Forms/MessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogElements = props.dialogsPage.dialogsArray.map((el) =>\r\n        <DialogName key={el.id} name={el.name} id={el.id}/>);\r\n\r\n    let messageElements = props.dialogsPage.messagesArray.map((el) =>\r\n        <DialogMessage key={el.message} message={el.message}/>);\r\n\r\n    let addMessageInRedux = (formData) => {\r\n        props.addMessageState(formData.newMessage);\r\n    };\r\n\r\n    return (\r\n        <div className={style_dialogs.content}>\r\n            <div className={style_dialogs.column_names}>\r\n                <div className={style_dialogs.section}>DIALOGS</div>\r\n                {dialogElements}\r\n            </div>\r\n            <div className={style_dialogs.column_messages}>\r\n                <div className={style_dialogs.section}>MESSAGES</div>\r\n                {messageElements}\r\n                <ReduxMessageFormcontainer onSubmit={addMessageInRedux}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {addMessageStateActionCreator} from \"../../redux/dialogsPage_reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AuthRedirect} from \"../../hoc/AuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nlet obj_ActionCreator_ToDispatch = {\r\n    addMessageState: addMessageStateActionCreator\r\n};\r\n\r\nconst DialogsContainer = compose(connect(mapStateToProps, obj_ActionCreator_ToDispatch), AuthRedirect)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         addMessageStateContainer: () => {\r\n//             dispatch(addMessageStateActionCreator());\r\n//         },\r\n//         newMessageStateContainer: (text) => {\r\n//             dispatch(newMessageStateActionCreator(text));\r\n//         }\r\n//     }\r\n// };"],"sourceRoot":""}